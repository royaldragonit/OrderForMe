// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using OrderForMeProject.Models.Entities;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;

namespace OrderForMeProject.Models.Entities
{
    public partial class OrderformeContext
    {
        private OrderformeContextProcedures _procedures;

        public virtual OrderformeContextProcedures Procedures
        {
            get
            {
                if (_procedures is null) _procedures = new OrderformeContextProcedures(this);
                return _procedures;
            }
            set
            {
                _procedures = value;
            }
        }

        public OrderformeContextProcedures GetProcedures()
        {
            return Procedures;
        }

        protected void OnModelCreatingGeneratedProcedures(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Dr_GetInfoModifyOrderResult>().HasNoKey().ToView(null);
        }
    }

    public interface IOrderformeContextProcedures
    {
        Task<int> Dr_DeleteLinkProductInOrderAsync(int? OrderId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Dr_GetInfoModifyOrderResult>> Dr_GetInfoModifyOrderAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
    }

    public partial class OrderformeContextProcedures : IOrderformeContextProcedures
    {
        private readonly OrderformeContext _context;

        public OrderformeContextProcedures(OrderformeContext context)
        {
            _context = context;
        }

        public virtual async Task<int> Dr_DeleteLinkProductInOrderAsync(int? OrderId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                new SqlParameter
                {
                    ParameterName = "OrderId",
                    Value = OrderId ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Int,
                },
                parameterreturnValue,
            };
            var _ = await _context.Database.ExecuteSqlRawAsync("EXEC @returnValue = [dbo].[Dr_DeleteLinkProductInOrder] @OrderId", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }

        public virtual async Task<List<Dr_GetInfoModifyOrderResult>> Dr_GetInfoModifyOrderAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                parameterreturnValue,
            };
            var _ = await _context.SqlQueryAsync<Dr_GetInfoModifyOrderResult>("EXEC @returnValue = [dbo].[Dr_GetInfoModifyOrder]", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }
    }
}
